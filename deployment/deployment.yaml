
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-python
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-python
  namespace: ingress-python
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-python
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-python
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-python
subjects:
  - kind: ServiceAccount
    name: ingress-python
    namespace: ingress-python
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-python
  namespace: ingress-python
spec:
  type: NodePort
  ipFamilyPolicy: SingleStack
  ipFamilies:
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-python
    app.kubernetes.io/instance: ingress-python
    app.kubernetes.io/component: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ingress-python
    app.kubernetes.io/instance: ingress-python
    app.kubernetes.io/component: controller
  name: ingress-python-controller
  namespace: ingress-python
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-python
      app.kubernetes.io/instance: ingress-python
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-python
        app.kubernetes.io/instance: ingress-python
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: rpkatz/ingress-python:v0.1
          imagePullPolicy: IfNotPresent
          args:
            - python
            - /usr/src/app/main.py         
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
              hostPort: 80
            - name: https
              containerPort: 443
              protocol: TCP
              hostPort: 443
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
      serviceAccountName: ingress-python
      terminationGracePeriodSeconds: 0
